#include<iostream> 
#include<vector> 
#include<string> 
#include<Windows.h> 
using namespace std;

bool vse = false;

int menu_game() {
    int vybor_1;

    cout << " \t\t\t\t\t\t -----------------------------------------------------------\t\t\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\tДобро пожаловать в капитал-шоу Поле чудес!\t   |\t\t\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\t\t      1.Начать игру\t\t\t   |\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\t\t      2.Правила игры\t\t\t   |\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\t\t      3.Выход из игры\t\t\t   |\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t -----------------------------------------------------------\t\t\t\t\t\t" << endl;

    cin >> vybor_1;

    if (vybor_1 != 1 && vybor_1 != 2 && vybor_1 != 3) {
        if (!cin) {
            cout << "Введите пожалуйста цифру от 1 до 3" << endl;
            exit(0);

        }
        cout << "Введите пожалуйста цифру от 1 до 3" << endl;
        return 2;
    }
    else {
        switch (vybor_1) {
        case 1: {
            system("cls");
            return 1;
        }
        case 2: {
            cout << "Приветсвую вас в капитал-шоу Поле Чудес! Хоть эта игра знакома каждому из вас,но правила все таки объясню" << endl;
            cout << "1. Выбирается тема, на которую будет загадываться слово" << endl;
            cout << "2. Загадывается слово" << endl;
            cout << "3. Высвечивается вопрос, на который нужно ответить правильно,чтобы угадать слово" << endl;
            cout << "4. Ввод букв с клавиатуры" << endl;
            cout << "5. Если буква введена неправильно,то выводится сообщение об ошибке и пользователью предлагается попробовать заново" << endl;
            cout << "6. Если же буква введена правильно,то выводится сообщение о том, что буква введена правильная и можно идти дальше" << endl;
            cout << "7. Если все буквы введены правильно -  поздравляю вы выйграли главный приз - ААААААВТОМОБИЛЬ!!!" << endl;
            cout << "8. Если у вас закончились 10 попыток,чтобы угать слово,то не расстраивайтесь,приходите играть в другой раз!" << endl;
            return 2;
        }
        case 3: {
            cout << "До новых встреч на полях Поля чудес!!!" << endl;
            vse != vse;
            return 3;
        }
        }
    }
}
int vybor_kategorii() {
    int vybor_2;

    cout << " \t\t\t\t\t\t -----------------------------------------------------------\t\t\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\t            Выберите категорию: \t           |\t\t\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\t\t        1.Спорт\t\t\t           |\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\t\t        2.Растения\t\t\t   |\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\t\t        3.Животные\t\t\t   |\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\t\t        4.Наука\t\t\t           |\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t |\t\t        5.Еда\t\t\t           |\t\t\t\t" << endl;
    cout << "\t\t\t\t\t\t -----------------------------------------------------------\t\t\t\t\t\t" << endl;

    cin >> vybor_2;

    if (vybor_2 != 1 && vybor_2 != 2 && vybor_2 != 3 && vybor_2 != 4 && vybor_2 != 5) {
        if (!cin) {
            cout << "Введите пожалуйста цифру от 1 до 5" << endl;
            exit(0);
        }
        cout << "Введите пожалуйста цифру от 1 до 5" << endl;
        exit(0);
    }
    else {
        switch (vybor_2) {
        case 1: {
            system("cls");
            return 1;
        }
        case 2: {
            system("cls");
            return 2;
        }
        case 3: {
            system("cls");
            return 3;
        }
        case 4: {
            system("cls");
            return 4;
        }
        case 5: {
            system("cls");
            return 5;
        }
        }
    }

}

string sport(int randomnyi_vopros) {


    string vopros_1[] = {
        "Какая спортивная игра играется при помощи ракеток, а также специальных воланов, известными как перьевые шары?",
        "Какой вид спорта включает в себя поединки с использованием шпаг, рапиров или сабель, где целью является поражение противника точными ударами?",
        "В какой спортивной дисциплине атлеты сочетают в себе лыжные гонки с охотничьей стрельбой из винтовки?",
        "Какое соревнование объединяет пять различных видов спорта, включая стрельбу, плавание, конное спортивное езду, фехтование и бег?",
        "Какой вид спорта проверяет силу атлетов в тяге на грудь (жим лежа), приседании со штангой и становой тяге??" };
    cout << vopros_1[randomnyi_vopros] << endl;

    string words[] = { "бадминтон", "фехтование", "биатлон", "пентатлон", "пауэрлифтинг" };
    return words[randomnyi_vopros];
}

string plants(int randomnyi_vopros) {

    string vopros_2[] = {
      "Какое растение, широко известное своими ароматными цветами, часто используется в гавайских лей и известно под именем франжипани?",
      "Какое водное растение является самым маленьким цветковым растением на Земле и часто используется в биологических исследованиях?",
      "Какое растение, известное своими сероватыми листьями и часто используемое как декоративное почвопокровное растение, имеет название, происходящее от греческих слов, означающих два зерна?",
      "Какое хвойное дерево, известное как японский кедр, является национальным деревом Японии и ценится за свою долговечность и устойчивость к гниению?",
      "Какое декоративное растение, известное своими яркими цветами и часто выращиваемое в саду или в помещении, имеет название, происходящее от латинского слова, означающего пепельны?" };
    cout << vopros_2[randomnyi_vopros] << std::endl;

    string words[] = { "плюмерия", "вольфия", "дихондра", "криптомерия", "цинерария" };
    return words[randomnyi_vopros];
}

string animal(int randomnyi_vopros) {

    string vopros_3[] = {
      "Какое амфибийное животное, известное своей способностью регенерировать конечности и другие органы, также называют мексиканским ходячим рыбой?",
      "Какое млекопитающее из семейства енотовых, обитающее в Центральной и Южной Америке, отличается своим длинным подвижным носом и хвостом с кольцами?",
      "Какое небольшое сумчатое животное из Австралии, известное своей дружелюбностью и выражением улыбки, получило прозвище самое счастливое животное в мире?",
      "Какое редкое степное парнокопытное животное, обитающее в Центральной Азии и известное своим необычным носом, который помогает фильтровать пыль и согревать холодный воздух?",
      "ККакое небольшое приматное животное из Африки, также известное как бушбеби, имеет большие глаза для ночного зрения и сильные задние конечности для прыжков?" };
    cout << vopros_3[randomnyi_vopros] << std::endl;

    string words[] = { "аксолотль", "коати", "квокка", "сайгак", "галаго" };
    return words[randomnyi_vopros];
}

string science(int randomnyi_vopros) {

    string vopros_4[] = {
      "Какой процесс, происходящий в хлоропластах растений и некоторых бактерий, превращает солнечную энергию в химическую энергию, производя кислород и глюкозу?",
      "Какое понятие в астрофизике и теории относительности описывает точку в пространстве-времени, где гравитационное поле становится бесконечно сильным, а физические законы перестают действовать?",
      "Какое научное направление изучает структуру кристаллов путем анализа их дифракционных картин, полученных при прохождении рентгеновских лучей, нейтронов или электронов через кристаллические образцы?",
      "Какой гипотетический концепт в теоретической физике предполагает, что каждую частицу имеет супералгебраическую партнершу с отличающимися спином?",
      "Какое термодинамическое величина измеряет степень хаотичности или беспорядка в системе и всегда увеличивается в замкнутых системах?" };
    cout << vopros_4[randomnyi_vopros] << std::endl;

    string words[] = { "фотосинтез", "сингулярность", "кристаллография", "суперсимметрия", "энтропия" };
    return words[randomnyi_vopros];
}

string food(int randomnyi_vopros) {


    string vopros_5[] = {
        "Какое традиционное итальянское кондитерское изделие представляет собой трубочку из теста, заполненную сладким кремом на основе сыра рикотта?",
        "Какое блюдо из Латинской Америки, приготовленное из свежей рыбы, маринованной в соке лайма или лимона, часто подается с луком, перцем и кинзой?",
        "Какое французское овощное блюдо, которое готовится путем тушения, включает в себя баклажаны, кабачки, перец, помидоры и лук?",
        "Какое традиционное блюдо греческой кухни готовится из слоев баклажанов, картофеля, мяса и соуса бешамель, запечённых до золотистой корочки?",
        "Какое итальянское блюдо из сырой рыбы или мяса, обычно подается с лимонным соком, оливковым маслом и специями?" };
    cout << vopros_5[randomnyi_vopros] << std::endl;


    string words[] = { "канноли", "севиче", "рататуй", "муссака", "крудо" };
    return words[randomnyi_vopros];
}

void kartinki_horoshie() {
    int vybor_kartinki = 1 + rand() % 6;
    switch (vybor_kartinki) {
    case 1: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*       Ну что вы говорите!     *\n"
            << "*         (¬_¬)                 *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Откройте эту букву!        *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }

    case 2: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*       Ой, как неловко!        *\n"
            << "*        (///_\\)                *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Откройте букву снова!      *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }

    case 3: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*           Молодец!            *\n"
            << "*          ($_$)                *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Откройте эту букву!        *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }

    case 4: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*       Не может быть!          *\n"
            << "*          (0_0)                *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Откройте эту букву!        *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }


    case 5: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*          Ха-ха-ха!            *\n"
            << "*          (^_^)                *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Откройте эту букву!        *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }

    case 6: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*           Победа!             *\n"
            << "*         \\(~_~)/               *\n"
            << "*        / |  \\                 *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Откройте эту букву!        *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;

    }
    }
}

int kartinki_plohie(int popytki) {
    int vybor_kartinki = 1 + rand() % 6;
    switch (vybor_kartinki) {
    case 1: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*       Ах, как жаль!           *\n"
            << "*         (._.)                 *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Буквы тут нет, увы!        *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }

    case 2: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*       Это была ошибка!        *\n"
            << "*         (x_x)                 *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Попробуй снова угадать!    *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }

    case 3: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*      Ха-ха-ха! Промах!        *\n"
            << "*         (¬_¬)                 *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*      Ты не угадал! Ха-ха!     *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }

    case 4: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*       Стыдно, промах!         *\n"
            << "*         (^_^)                 *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Ты не угадал, стыдно!      *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }

    case 5: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*       Не волнуйтесь,          *\n"
            << "*       мы справимся!           *\n"
            << "*         ('-')                 *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*    Попробуйте еще раз!        *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }

    case 6: {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*       Очень остроумно!        *\n"
            << "*         (:_:)                 *\n"
            << "*        / | \\                  *\n"
            << "*          |                    *\n"
            << "*         / \\                   *\n"
            << "*                               *\n"
            << "*      Попробуй еще раз!        *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";
        break;
    }
    }
    return popytki;
}

int proverka_bukv(char dogatka, string secret_word, string& dogatka_word)
{
    int i;
    int sootvetstvie = 0;
    int dlina = secret_word.length();

    for (i = 0; i < dlina; i++)
    {
        if (dogatka == dogatka_word[i])
            return 0;
        if (dogatka == secret_word[i])
        {
            dogatka_word[i] = dogatka;
            sootvetstvie++;
        }
    }
    return sootvetstvie;
}

void place_game(int randomnyi_vopros, int vybor_2) {//Основная функция игры 
    string slovo;
    char tek_bukva;
    string vved_bukva;
    int povtor = 0;
    int plohie_popytki = 0;

    if (vybor_2 == 1)
    {
        slovo = sport(randomnyi_vopros);//Передали в нашу строку выбранную строку,путей генерации
    }
    else if (vybor_2 == 2)
    {
        slovo = plants(randomnyi_vopros);
    }
    else if (vybor_2 == 3)
    {
        slovo = animal(randomnyi_vopros);
    }
    else if (vybor_2 == 4)
    {
        slovo = science(randomnyi_vopros);
    }
    else
    {
        slovo = food(randomnyi_vopros);
    }

    string unknown(slovo.length(), '*');

    while (plohie_popytki < 10)//Цикл в котором будут процессы до того пока количество ошибок < 10
    {
        cout << "\n\n" << unknown << endl;
        cin >> tek_bukva;
        cout << " " << endl;

        for (int i = 0; i < vved_bukva.length(); i++)
        {
            if (tek_bukva == vved_bukva[i]) {
                cout << "Вы уже вводили такую букву, попробуйте другую" << endl;
                povtor++;
            }
        }

        if (povtor == 0) {
            vved_bukva.push_back(tek_bukva);
            vved_bukva.push_back(' ');
            cout << "Использованные буквы: [" << vved_bukva << "]" << endl;

            if (proverka_bukv(tek_bukva, slovo, unknown) == 0)
            {
                kartinki_plohie(plohie_popytki++);
            }
            else {
                kartinki_horoshie();
            }
            cout << "У вас осталось " << 10 - plohie_popytki << " попыток" << endl;
            cout << " " << endl;

            if (slovo == unknown)
            {
                cout << slovo << endl;
                cout << "*********************************\n"
                    "*                               *\n"
                    "*                               *\n"
                    "*                               *\n"
                    "*             И вы выиграли...  *\n"
                    "*           ($_$)               *\n"
                    "*           / | \\               *\n"
                    "*             |                 *\n"
                    "*            / |                *\n"
                    "*                               *\n"
                    "*        Автомобиль!!!          *\n"
                    "*         Поздравляю!           *\n"
                    "*********************************\n"
                    "*                               *\n";
                break;
            }
        }
        povtor = 0;
    }

    if (plohie_popytki == 10)
    {
        cout << "*********************************\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*                               *\n"
            << "*         Попробуйте снова!     *\n"
            << "*           (^_^)               *\n"
            << "*           / | \\               *\n"
            << "*             |                 *\n"
            << "*            / \\                *\n"
            << "*      Удача любит настойчивых! *\n"
            << "*    Вы на правильном пути!     *\n"
            << "*                               *\n"
            << "*********************************\n"
            << "*                               *\n";

        cout << "Было загадано слово : " << slovo << endl;
    }

    cin.ignore();
    cin.get();
}

int main() {
    srand(time(NULL));
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);

    do {
        if (menu_game() == 1) {//Цикл где идет проверка если пользователь ввел 1 то генерируем число во все функции и запускаем игровой цикл
            int vybor_2 = vybor_kategorii();
            int randomnyi_vopros = 1 + rand() % 6;
            place_game(randomnyi_vopros, vybor_2);
        }
    } while (vse == false);
}
